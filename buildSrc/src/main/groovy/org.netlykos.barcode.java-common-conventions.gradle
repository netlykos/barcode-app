plugins {
  id 'eclipse'
  id 'io.spring.dependency-management'
  id 'idea'
  id 'jacoco'
  id 'org.sonarqube'
  id 'org.netlykos.barcode.base-conventions'
 }

group = 'org.netlykos.barcode'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

dependencies {
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

  implementation 'org.apache.logging.log4j:log4j-api'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.junit.jupiter:junit-jupiter'

  if (project.name != 'test-support') {
    testImplementation(project(':backend:test-support'))
  }
}

test {
  useJUnitPlatform()
  // ignore failures until we can get the build working in the environment
  // ignoreFailures = false

  // Add 'standardOut' to the event list if you want to see it in the build
  testLogging.events = ['skipped', 'failed']
  testLogging.exceptionFormat = 'full'

  // report is always generated after tests run
  finalizedBy jacocoTestReport
}

jacocoTestReport {
   // tests are required to run before generating the report
  dependsOn test
  reports {
    xml.enabled true
    csv.enabled false
  }
}

sonarqube {
  properties {
    property "sonar.projectKey", "netlykos_barcode-app"
    property "sonar.organization", "netlykos"
    property "sonar.projectVersion", version
    property "sonar.host.url", "https://sonarcloud.io"
  }
}
